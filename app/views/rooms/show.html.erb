<div class="panel"><div class="panel-body">
<p id="notice"><%= notice %></p>

<div class="row">

  <div class="videoContainer col-md-8">
    <video id="localVideo" style="width: 100%;"></video>
    <div id="localVolume" class="volume_bar"></div>
  </div>

  <div class="videoContainer col-md-12">
    <p>
      <strong>Room Master:</strong>
      <%= @room.user.email %>
    </p>

    <p>
      <strong>Description:</strong>
      <%= @room.description %>
    </p>

    <p><strong>Share link to friends:</strong>
      <span id="subTitle"></span>
    </p>
  </div>

  <div class="col-md-12">
    <strong>Current room QR code:</strong>
    <table>
      <% @qr.modules.each_index do |x| %>
          <tr>
            <% @qr.modules.each_index do |y| %>
                <% if @qr.dark?(x,y) %>
                    <td class="black"/>
                <% else %>
                    <td class="white"/>
                <% end %>
            <% end %>
          </tr>
      <% end %>
    </table>

  </div>

</div>

<hr/>

<div class="row">
<div id="remotes"></div>
</div>

<script src="simplewebrtc.bundle.js"></script>
<script>
    // grab the room from the URL
    var room = "<%=@room.subject %>";

    // create our webrtc connection
    var webrtc = new SimpleWebRTC({
        url: 'http://106.185.28.229:8888/',
        // the id/element dom element that will hold "our" video
        localVideoEl: 'localVideo',
        // the id/element dom element that will hold remote videos
        remoteVideosEl: '',
        // immediately ask for camera access
        autoRequestMedia: true,
        debug: false,
        detectSpeakingEvents: true,
        autoAdjustMic: false
    });

    // when it's ready, join if we got a room from the URL
    webrtc.on('readyToCall', function () {
        // you can name it anything
        if (room) webrtc.joinRoom(room);
    });

    function showVolume(el, volume) {
        if (!el) return;
        if (volume < -45) { // vary between -45 and -20
            el.style.height = '0px';
        } else if (volume > -20) {
            el.style.height = '100%';
        } else {
            el.style.height = '' + Math.floor((volume + 100) * 100 / 25 - 220) + '%';
        }
    }
    webrtc.on('channelMessage', function (peer, label, data) {
        if (data.type == 'volume') {
            showVolume(document.getElementById('volume_' + peer.id), data.volume);
        }
    });
    webrtc.on('videoAdded', function (video, peer) {
        console.log('video added', peer);
        var remotes = document.getElementById('remotes');
        if (remotes) {
            var d = document.createElement('div');
            d.className = 'videoContainer col-md-8';
            d.id = 'container_' + webrtc.getDomId(peer);
            d.appendChild(video);
            var vol = document.createElement('div');
            vol.id = 'volume_' + peer.id;
            vol.className = 'volume_bar';
            video.onclick = function () {

                console.log(video.getAttribute('flag'));

                if( video.getAttribute('flag') == 'fullscreen')
                {
                    video.setAttribute('flag' , 'not_fullscreen');
                    document.mozCancelFullScreen();
                }else
                {
                    video.setAttribute('flag' , 'fullscreen');
                    video.mozRequestFullScreen();
                }


            };

            d.appendChild(vol);
            remotes.appendChild(d);
        }
    });
    webrtc.on('videoRemoved', function (video, peer) {
        console.log('video removed ', peer);
        var remotes = document.getElementById('remotes');
        var el = document.getElementById('container_' + webrtc.getDomId(peer));
        if (remotes && el) {
            remotes.removeChild(el);
        }
    });
    webrtc.on('volumeChange', function (volume, treshold) {
        //console.log('own volume', volume);
        showVolume(document.getElementById('localVolume'), volume);
    });

    // Since we use this twice we put it here
    function setRoom(name) {
        $('form').remove();
        $('h1').text(name);
        $('#subTitle').text(location.href);
        $('body').addClass('active');
    }

    if (room) {
        setRoom(room);
    } else {
        $('form').submit(function () {
            var val = $('#sessionInput').val().toLowerCase().replace(/\s/g, '-').replace(/[^A-Za-z0-9_\-]/g, '');
            webrtc.createRoom(val, function (err, name) {
                console.log(' create room cb', arguments);

                var newUrl = location.pathname + '?' + name;
                if (!err) {
                    history.replaceState({foo: 'bar'}, null, newUrl);
                    setRoom(name);
                } else {
                    console.log(err);
                }
            });
            return false;
        });
    }


</script>

<ul class="nav nav-pills">
  <% if @room.user_id == current_user.id %>
      <li><%= link_to 'Edit Room', edit_room_path(@room) %></li>
  <% end %>

  <li><%= link_to 'Back', rooms_path %></li>

</ul>
</div>
</div>